<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/data/**" location="/resources/data/" />
	<resources mapping="/admin/**" location="/resources/data/admin/" />
	<resources mapping="/magazine/**" location="/resources/data/magazine/" />
	<resources mapping="/collection/**" location="/resources/data/collection/" />
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	<resources mapping="/community/**" location="/resources/data/community/" />
	<resources mapping="/refund/**" location="/resources/data/refund/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.javaweb8S" />
	
	<!-- BCryptPasswordEncoder 객체를 위한 Bean 등록 -->
  <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
  
  <!-- 파일업로드에 필요한 라이브러리를 Bean으로 등록(업로드 최대용량제한 : 20MByte) -->
  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  	<beans:property name="maxUploadSize" value="20971520" />
  	<beans:property name="defaultEncoding" value="utf-8" />
  </beans:bean>
  

	<!-- Interceptor 설정 -->
	<beans:bean id="adminInterceptor" class="com.spring.javaweb8S.interceptor.AdminInterceptor" />
	<beans:bean id="memberInterceptor" class="com.spring.javaweb8S.interceptor.MemberInterceptor" />

	<interceptors>
	  <interceptor>
	    <mapping path="/admin/**"/>
	    <beans:ref bean="adminInterceptor" />	<!-- 관리자 페이지 -->
	  </interceptor>
	  
	  <interceptor>
	    <mapping path="/member/myPage"/>
	    <mapping path="/member/myPage/**"/>
	    <mapping path="/member/memberLogout"/>
	    <mapping path="/order/**"/>
	    <mapping path="/community/reflectionInsert"/>
	    <mapping path="/community/reflectionUpdate"/>
	    <beans:ref bean="memberInterceptor" />	<!-- 회원 페이지: 마이페이지, 로그아웃, 장바구니, 주문, 주소록, 기록 작성/수정 -->
	  </interceptor>
	  
	</interceptors>


 	<!-- 트래잭션을 어노테이션으로 처리하기위해 참조하는 클래스를 등록시켜준다. -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans:beans>