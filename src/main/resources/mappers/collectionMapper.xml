<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaweb8S.dao.CollectionDAO">
	
	<!-- 컬렉션 리스트 -->
	<select id="collectionTotRecCnt" resultType="int">
		<if test='search != null and search == "최신순"'>
			select count(*) from bo_collection where colOpen = '공개' order by idx desc;
		</if>
		<if test='search != null and search == "상품명"'>
			select count(*) from bo_collection where colOpen = '공개' order by binary(colName), idx desc;
		</if>
		<if test='search != null and search == "낮은 가격순"'>
			select count(*) from bo_collection where colOpen = '공개' order by idx desc;
		</if>
		<if test='search != null and search == "높은 가격순"'>
			select count(*) from bo_collection where colOpen = '공개' order by idx desc;
		</if>
	</select>
	
	<select id="getCollectionList" resultType="com.spring.javaweb8S.vo.CollectionVO">
		<if test='search != null and search == "최신순"'>
			select *, (select count(*) from bo_product where colIdx = c.idx and prodOpen = '공개') as colProdNum  
			from bo_collection c where colOpen = '공개' order by idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test='search != null and search == "상품명"'>
			select *, (select count(*) from bo_product where colIdx = c.idx and prodOpen = '공개') as colProdNum 
			from bo_collection c where colOpen = '공개' order by binary(colName), idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test='search != null and search == "낮은 가격순"'>
			select *, (select count(*) from bo_product where colIdx = c.idx and prodOpen = '공개') as colProdNum 
			from bo_collection c where colOpen = '공개' order by idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test='search != null and search == "높은 가격순"'>
			select *, (select count(*) from bo_product where colIdx = c.idx and prodOpen = '공개') as colProdNum  
			from bo_collection c where colOpen = '공개' order by idx desc limit #{startIndexNo},#{pageSize};
		</if>
	</select>
 
	<!-- 컬렉션의 상품 리스트 -->
	<select id="productTotRecCnt" resultType="int">
		<if test='search != null and search == "최신순"'>
			select count(*) from bo_product as p left join bo_collection as c on p.colIdx = c.idx 
			where c.colOpen = "공개" and p.prodOpen = "공개" 
			<if test='searchString != null and searchString != "0"'>
				and colIdx = #{searchString} 
			</if>
			 order by p.idx desc;
		</if>
		<if test='search != null and search == "상품명"'>
			select count(*) from bo_product as p left join bo_collection as c on p.colIdx = c.idx 
			where c.colOpen = "공개" and p.prodOpen = "공개" 
			<if test='searchString != null and searchString != "0"'>
				and colIdx = #{searchString} 
			</if>
			order by binary(prodName), p.idx desc;
		</if>
		<if test='search != null and search == "낮은 가격순"'>
			select count(*) from bo_product as p left join bo_collection as c on p.colIdx = c.idx 
			where c.colOpen = "공개" and p.prodOpen = "공개" 
			<if test='searchString != null and searchString != "0"'>
				and colIdx = #{searchString} 
			</if>
			order by prodPrice asc;
		</if>
		<if test='search != null and search == "높은 가격순"'>
			select count(*) from bo_product as p left join bo_collection as c on p.colIdx = c.idx 
			where c.colOpen = "공개" and p.prodOpen = "공개" 
			<if test='searchString != null and searchString != "0"'>
				and colIdx = #{searchString} 
			</if>
			order by prodPrice desc;
		</if>
	</select>
	
	<select id="getProductList" resultType="com.spring.javaweb8S.vo.ProductVO">
		<if test='search != null and search == "최신순"'>
			select p.*, c.colName 
			from bo_product as p left join bo_collection as c 
			on p.colIdx = c.idx
			where c.colOpen = "공개" and p.prodOpen = "공개"	
			<if test='colIdx != null and colIdx != "0"'>
				and colIdx = #{colIdx} 
			</if>
			order by p.idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test='search != null and search == "상품명"'>
			select p.*, c.colName 
			from bo_product as p left join bo_collection as c 
			on p.colIdx = c.idx
			where c.colOpen = "공개" and p.prodOpen = "공개"	
			<if test='colIdx != null and colIdx != "0"'>
				and colIdx = #{colIdx} 
			</if>
			order by binary(prodName), p.idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test='search != null and search == "낮은 가격순"'>
			select p.*, c.colName 
			from bo_product as p left join bo_collection as c 
			on p.colIdx = c.idx
			where c.colOpen = "공개" and p.prodOpen = "공개"	 
			<if test='colIdx != null and colIdx != "0"'>
				and colIdx = #{colIdx} 
			</if>
			order by prodPrice asc limit #{startIndexNo},#{pageSize};
		</if>
		<if test='search != null and search == "높은 가격순"'>
			select p.*, c.colName 
			from bo_product as p left join bo_collection as c 
			on p.colIdx = c.idx
			where c.colOpen = "공개" and p.prodOpen = "공개"	
			<if test='colIdx != null and colIdx != "0"'>
				and colIdx = #{colIdx} 
			</if>
			order by prodPrice desc limit #{startIndexNo},#{pageSize};
		</if>
	</select>
	
	<select id="getProductSave" resultType="com.spring.javaweb8S.vo.SaveVO">
		select * from bo_save where memNickname = #{nickname} and prodIdx = #{idx};
	</select>
	
	<select id="getProductCartSearch" resultType="com.spring.javaweb8S.vo.CartVO">
		select * from bo_cart where memNickname = #{nickname} and prodIdx = #{idx} limit 1;
	</select>
	
	<select id="getProdCollection" resultType="com.spring.javaweb8S.vo.CollectionVO">
		select * from bo_collection where idx = (select colIdx from bo_product where idx = #{idx});
	</select>
	
	<select id="getProductInfo" resultType="com.spring.javaweb8S.vo.ProductVO">
		select * from bo_product where idx = #{idx};
	</select>
	
	<select id="getProdOption" resultType="com.spring.javaweb8S.vo.OptionVO">
		select * from bo_option where prodIdx = #{idx};
	</select>
	
	<select id="getProductOpCartSearch" resultType="Integer">
		select opIdx from bo_cart where memNickname = #{memNickname} and prodIdx = #{prodIdx} and opIdx in
		<foreach collection="optionList" index="index" item="item" open="(" close=")" separator=",">
   		#{item.opIdx}
    </foreach>
	</select>
	
	
	<insert id="setProductSave">
		insert into bo_save(idx,memNickname,type,prodIdx,prodName,prodPrice,prodThumbnail) 
		values (default,#{vo.memNickname},#{vo.type},#{vo.prodIdx},#{vo.prodName},#{vo.prodPrice},#{vo.prodThumbnail});
	</insert>
	
	<insert id="setProductOpCartInsert" parameterType="java.util.ArrayList">
		<foreach item="item" index="index" collection="insertOption" separator=";">
			insert into bo_cart(idx,memNickname,type,prodIdx,opIdx,prodName,prodPrice,prodThumbnail,opName,opPrice,num,totalPrice,cartDate) values 
    	(default,#{vo.memNickname},#{vo.type},#{vo.prodIdx},#{item.opIdx},#{vo.prodName},#{vo.prodPrice},#{vo.prodThumbnail},#{item.opName},#{item.opPrice},#{item.num},#{item.totalPrice},default)
   	</foreach>
	</insert>
	
	
	<update id="setProductOpCartUpdate">
		<foreach item="item" index="index" collection="updateOption">
			update bo_cart set 
    	num = num + #{item.num}, totalPrice = totalPrice + #{item.totalPrice} where memNickname = #{vo.memNickname} and prodIdx = #{vo.prodIdx} and opIdx = #{item.opIdx};     
    </foreach>
	</update>
	
	<update id="setProdSaveNumUpdate">
		update bo_product set prodSave = prodSave + #{prodSaveNum} where idx = #{prodIdx};
	</update>
	
	<delete id="setProductSaveDelete">
		delete from bo_save where memNickname = #{memNickname} and prodIdx = #{prodIdx};
	</delete>
	
</mapper>