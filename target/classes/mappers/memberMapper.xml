<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaweb8S.dao.MemberDAO">

	<select id="getMidCheck" resultType="com.spring.javaweb8S.vo.MemberVO">
		SELECT * FROM bo_member WHERE mid = #{mid};
	</select>

	<select id="getNicknameCheck" resultType="com.spring.javaweb8S.vo.MemberVO">
		SELECT * FROM bo_member WHERE nickname = #{nickname};
	</select>
	
	<select id="getMidFinder" resultType="String">
		SELECT mid FROM bo_member WHERE name = #{name} AND email = #{email};
	</select>
	
	<select id="getPwdFinder" resultType="String">
		SELECT email FROM bo_member WHERE mid = #{mid} AND email = #{email};
	</select>

	<select id="getBooksletterCheck" resultType="String">
		SELECT idx FROM bo_booksletter WHERE email = #{email} AND memNickname IS NULL;
	</select>
	
	<select id="getProverbTotalNum" resultType="int">
		SELECT count(*) FROM bo_proverb;
	</select>
	
	<select id="getRandomProverb" resultType="com.spring.javaweb8S.vo.ProverbVO">
		SELECT * FROM bo_proverb ORDER BY idx DESC LIMIT #{randomNum}, 1;
	</select>
	
	<select id="getMemberInfo" resultType="com.spring.javaweb8S.vo.MemberVO">
		SELECT * FROM bo_member WHERE nickname = #{nickname};
	</select>
	
	<select id="getTotalPoint" resultType="String">
		SELECT sum(point) FROM bo_point WHERE memNickname = #{nickname};
	</select>
	
	<select id="getTotalUsedPoint" resultType="String">
		SELECT sum(usedPoint) FROM bo_pointUse WHERE memNickname = #{nickname};
	</select>
	
	<select id="getTotalOrder" resultType="com.spring.javaweb8S.vo.OrderVO">
		SELECT count(*) AS orderNum, sum(paidPrice) AS totalPaidPrice FROM bo_order WHERE memNickname = #{nickname} AND orderStatus != "환불완료";
	</select>
	
	<select id="getOrderStatusNum" resultType="String">
		SELECT count(*) FROM bo_order WHERE memNickname = #{nickname} AND orderStatus = #{orderStatus} AND orderDate BETWEEN DATE_ADD(NOW(), INTERVAL -3 MONTH) AND NOW();
	</select>
	
	<!-- 송장으로 검색 -->
	<select id="myPageOrderWithInvoiceTotRecCntWithPeriod" resultType="com.spring.javaweb8S.vo.OrderVO">
		<if test='searchString == "" and startDate == ""'>
			SELECT * FROM bo_order WHERE memNickname = #{nickname} 
			
			<if test='sort != "" and sort != "전체"'>
				AND orderStatus = #{sort}
			</if>
			GROUP BY orderCode;
		</if>
		<if test='searchString != "" and startDate == ""'>
			SELECT *   
			FROM bo_order o
			LEFT JOIN bo_delivery d
			ON o.idx = d.orderIdx
			WHERE o.memNickname = #{nickname} AND
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if>
			
			d.${search} LIKE CONCAT('%',#{searchString},'%')
			GROUP BY o.orderCode;
		</if>
		<if test='searchString == "" and startDate != ""'>
			SELECT * FROM bo_order 
			WHERE memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				orderStatus = #{sort} AND 
			</if> 
			
			date_format(orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
			GROUP BY orderCode;
		</if>
		<if test='searchString != "" and startDate != ""'>
			SELECT *  
			FROM bo_order o
			LEFT JOIN bo_delivery d
			ON o.idx = d.orderIdx
			WHERE o.memNickname = #{nickname} AND 
			
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if>
			
			d.${search} LIKE CONCAT('%',#{searchString},'%') AND date_format(o.orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
			GROUP BY o.orderCode;
		</if>
	</select>
	
	<select id="getOrderWithInvoiceSearchList" resultType="com.spring.javaweb8S.vo.OrderVO">
		<if test='searchString == "" and startDate == ""'>
			SELECT o.*, r.refundNum AS refundNum
			
			FROM bo_order o
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} 
			
			<if test='sort != "" and sort != "전체"'>
				AND o.orderStatus = #{sort}
			</if>
			GROUP BY o.orderCode
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		<if test='searchString != "" and startDate == ""'>
			SELECT o.*, r.refundNum AS refundNum  
			FROM bo_order o
			LEFT JOIN bo_delivery d
				ON o.idx = d.orderIdx

		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} AND
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if>
			
			d.${search} LIKE CONCAT('%',#{searchString},'%')
			GROUP BY o.orderCode 
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		<if test='searchString == "" and startDate != ""'>
			SELECT o.*, r.refundNum AS refundNum
			
			FROM bo_order o
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if> 
			
			date_format(o.orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
			GROUP BY o.orderCode
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		<if test='searchString != "" and startDate != ""'>
			SELECT o.*, r.refundNum AS refundNum  
			FROM bo_order o
			LEFT JOIN bo_delivery d
				ON o.idx = d.orderIdx
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
		 		
			WHERE o.memNickname = #{nickname} AND   
			
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if>
			
			d.${search} LIKE CONCAT('%',#{searchString},'%') and date_format(o.orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
			GROUP BY o.orderCode
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
	</select>
	
	<!-- 주문 내역 일반 검색 -->
	<select id="myPageOrderTotRecCntWithPeriod" resultType="int">
		<if test='searchString == "" and startDate == ""'>
			SELECT count(*) FROM bo_order 
			WHERE memNickname = #{nickname}   
			<if test='sort != "" and sort != "전체"'>
				AND orderStatus = #{sort}
			</if>
			;
		</if>
		<if test='searchString != "" and startDate == ""'>
			SELECT count(*) FROM bo_order WHERE memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				orderStatus = #{sort} AND 
			</if>
			
			${search} LIKE CONCAT('%',#{searchString},'%');
		</if>
		<if test='searchString == "" and startDate != ""'>
			SELECT count(*) FROM bo_order WHERE memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				orderStatus = #{sort} AND 
			</if> 
			
			date_format(orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate};
		</if>
		<if test='searchString != "" and startDate != ""'>
			SELECT count(*) FROM bo_order WHERE memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				orderStatus = #{sort} AND 
			</if>
			
			${search} LIKE CONCAT('%',#{searchString},'%') and date_format(orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate};
		</if>
	</select>
	
	<select id="getOrderSearchList" resultType="com.spring.javaweb8S.vo.OrderVO">
		<if test='searchString == "" and startDate == ""'>
			SELECT o.*, r.refundNum AS refundNum
			
			FROM bo_order o
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} 
			
			<if test='sort != "" and sort != "전체"'>
				AND o.orderStatus = #{sort}
			</if>
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		
		
		<if test='searchString != "" and startDate == ""'>
			SELECT o.*, r.refundNum AS refundNum
			
			FROM bo_order o
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} AND 
			
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if>
			
			o.${search} LIKE CONCAT('%',#{searchString},'%')
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		<if test='searchString == "" and startDate != ""'>
			SELECT o.*, r.refundNum AS refundNum
			
			FROM bo_order o
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if> 
			
			date_format(o.orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		<if test='searchString != "" and startDate != ""'>
			SELECT o.*, r.refundNum AS refundNum
			
			FROM bo_order o
		 	LEFT JOIN bo_refund r
		 		ON o.idx = r.orderIdx
				 
			WHERE o.memNickname = #{nickname} AND
			
			<if test='sort != "" and sort != "전체"'>
				o.orderStatus = #{sort} AND 
			</if>
			
			o.${search} LIKE CONCAT('%',#{searchString},'%') and date_format(o.orderDate, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
			ORDER BY o.idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
	</select>
	
	<select id="getBooksletterInfo" resultType="com.spring.javaweb8S.vo.BooksletterVO">
		SELECT * FROM bo_booksletter WHERE memNickname = #{nickname} AND booksletterStatus != "구독취소";
	</select>
	
	<select id="getSaveList" resultType="com.spring.javaweb8S.vo.SaveVO">
		SELECT * FROM bo_save WHERE memNickname = #{nickname} AND type = #{sort} ORDER BY idx DESC;
	</select>
	
	<select id="getAddressList" resultType="com.spring.javaweb8S.vo.AddressVO">
		SELECT * FROM bo_address WHERE memNickname = #{memNickname} AND addressDel != "삭제";
	</select>
	
	<select id="getAddressInfo" resultType="com.spring.javaweb8S.vo.AddressVO">
		SELECT * FROM bo_address WHERE idx = #{idx};
	</select>
	
	<select id="myPagePointTotRecCnt" resultType="int">
		SELECT count(*) FROM bo_point WHERE memNickname = #{nickname} 
		<if test='sort != null and sort != "전체"'>
			AND pointReason LIKE CONCAT('%',#{sort},'%') 
		</if>
		;
	</select>
	
	<select id="getPointList" resultType="com.spring.javaweb8S.vo.PointVO">
		SELECT p.*, o.type AS type 
	
		FROM bo_point p
		LEFT JOIN bo_order o
			ON p.orderIdx = o.idx
		
		WHERE p.memNickname = #{nickname} 
		<if test='sort != null and sort != "전체"'>
			AND p.pointReason LIKE CONCAT('%',#{sort},'%') 
		</if>
		ORDER BY p.idx DESC LIMIT #{startIndexNo},#{pageSize};
	</select>
	
	<select id="myPagePointUseTotRecCnt" resultType="int">
		SELECT count(*) FROM bo_pointUse WHERE memNickname = #{nickname};
	</select>
	
	<select id="getPointUseList" resultType="com.spring.javaweb8S.vo.PointUseVO">
		SELECT p.*, o.type AS type 
	
		FROM bo_pointUse p
		LEFT JOIN bo_order o
			ON p.orderIdx = o.idx
		
		WHERE p.memNickname = #{nickname} 
		ORDER BY p.idx DESC LIMIT #{startIndexNo},#{pageSize};
	</select>
	
	<select id="getSubscribeInfo" resultType="com.spring.javaweb8S.vo.SubscribeVO">
		SELECT s.*, o.prodName AS prodName, o.maIdx AS maIdx 
		FROM bo_subscribe s
		LEFT JOIN bo_order o
			ON s.orderIdx = o.idx
		
		WHERE s.memNickname = #{nickname};
	</select>
	
	<select id="myPageAskSearchTotRecCnt" resultType="int">
		<if test='searchString == ""'><!-- 검색어가 없으면 전체! -->
		 	SELECT count(*) FROM bo_ask 
		 	
		 	WHERE memNickname = #{memNickname} AND askDel != "삭제"  
		 	AND category != "커뮤니티" 
		 	
		 	<if test='sort != "" and (sort == "답변완료" or sort == "답변전")'>
				AND answeredAsk = #{sort}
			</if>
		 	<if test='sort != "" and (sort == "공개" or sort == "비공개")'>
				AND secret = #{sort}
			</if>
			;
		</if>
		<if test='searchString != ""'>
		 	SELECT count(*) FROM bo_ask 
		 	
		 	WHERE memNickname = #{memNickname} AND askDel != "삭제" 
		 	AND category != "커뮤니티" 
		 	
		 	<if test='sort != "" and (sort == "답변" or sort == "답변전")'>
				AND answeredAsk = #{sort}
			</if>
		 	<if test='sort != "" and (sort == "공개" or sort == "비공개")'>
				AND secret = #{sort}
			</if>
			AND ${search} LIKE CONCAT('%',#{searchString},'%');
		</if>
	</select>
	
	<select id="getMemAskSearch" resultType="com.spring.javaweb8S.vo.AskVO">
		<if test='searchString == ""'><!-- 검색어가 없으면 전체! -->
		 	SELECT * FROM bo_ask 
		 	
		 	WHERE memNickname = #{memNickname} AND askDel != "삭제"  
		 	AND category != "커뮤니티" 
		 	<if test='sort != "" and (sort == "답변완료" or sort == "답변전")'>
				AND answeredAsk = #{sort}
			</if>
		 	<if test='sort != "" and (sort == "공개" or sort == "비공개")'>
				AND secret = #{sort}
			</if>
			ORDER BY idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
		<if test='searchString != ""'>
		 	SELECT * FROM bo_ask 
		 	
		 	WHERE memNickname = #{memNickname} AND askDel != "삭제" 
		 	AND category != "커뮤니티" 
		 	<if test='sort != "" and (sort == "답변완료" or sort == "답변전")'>
				AND answeredAsk = #{sort}
			</if>
		 	<if test='sort != "" and (sort == "공개" or sort == "비공개")'>
				AND secret = #{sort}
			</if>
			AND ${search} LIKE CONCAT('%',#{searchString},'%') ORDER BY idx DESC LIMIT #{startIndexNo},#{pageSize};
		</if>
	</select>
	
	<insert id="setMember">
		INSERT INTO bo_member(idx,mid,pwd,name,nickname,email,tel,memPhoto,memType,point,agreement,pwdUpdateDate,totCnt,firstVisit,memberDel) 
		VALUES (default,#{vo.mid},#{vo.pwd},#{vo.name},#{vo.nickname},#{vo.email},#{vo.tel},default,default,#{vo.point},default,default,default,default,default);
	</insert>
	
	<insert id="setRecoMidPointInsert">
		INSERT INTO bo_point (idx,memNickname,point,pointReason,pointStartDate) VALUES   
		(default, (select nickname from bo_member where mid = #{recoMid}),
		#{point},#{pointReason},default);
	</insert>
	
	<insert id="setPointInsert">
		INSERT INTO bo_point (idx,memNickname,point,pointReason,pointStartDate) VALUES   
		(default, #{nickname},#{point},#{pointReason},default);
	</insert>
	
	<insert id="setOrderPointInsert">
		INSERT INTO bo_point VALUES   
		(default, #{memNickname}, #{idx},
		(SELECT ROUND(paidPrice * 0.05) FROM bo_order WHERE idx = #{idx}),
		"상품구매확정",default);
	</insert>
	
	<insert id="setPartlyOrderPointInsert">
		INSERT INTO bo_point VALUES
		(default,#{memNickname},#{orderIdx},#{point},"상품구매확정",default);
	</insert>
	
	<insert id="setRefundInsert">
		INSERT INTO bo_refund VALUES
		(default,#{vo.memNickname},#{vo.orderIdx},#{vo.maIdx},#{vo.opIdx},#{vo.refundNum},#{vo.refundCode},"반품신청",default,default,#{vo.refundReason},#{vo.refundDetail},#{vo.refundPhoto},#{vo.refundPrice},#{vo.refundPoint},#{vo.deliveryPrice});
	</insert>
	
	<update id="setMemberPoint">
		UPDATE bo_member SET point = point + #{point} WHERE mid = #{recoMid};
	</update>
	
	<update id="setMemberLoginProcess">
		<if test="vo.todayCnt == 0">
	  	UPDATE bo_member SET totCnt = totCnt + 1, todayCnt = 1, lastVisit = now() WHERE idx = #{vo.idx};
		</if>
		<if test="vo.todayCnt != 0">
	  	UPDATE bo_member SET totCnt = totCnt + 1, todayCnt = todayCnt + 1, lastVisit = now() WHERE idx = #{vo.idx};
		</if>
	</update>
	
	<update id="setMemberPwdUpdate">
		UPDATE bo_member SET pwd = #{pwd} WHERE mid = #{mid};
	</update>
	
	<update id="setBooksletterInsert">
		UPDATE bo_booksletter SET memNickname = #{nickname} WHERE idx = #{booksletterIdx};
	</update>
	
	<update id="setOrderComplete">
		UPDATE bo_order SET orderStatus = "구매확정", manageDate = default WHERE idx = #{idx};
	</update>
	
	<update id="setMemberPointUpdate">
		UPDATE bo_member SET point = point + (SELECT ROUND(paidPrice * 0.05) FROM bo_order WHERE idx = #{idx}) 
		WHERE nickname = #{memNickname};
	</update>
	
	<update id="setOrderRefundStatus">
		UPDATE bo_order SET orderStatus = "반품신청", manageDate = default WHERE idx = #{orderIdx};
	</update>
	
	<update id="setPartlyMemberPointUpdate">
		UPDATE bo_member SET point = point + #{point} WHERE nickname = #{memNickname};
	</update>
	
	<update id="setBooksletterDelete">
		UPDATE bo_booksletter SET booksletterStatus = "구독취소" WHERE idx = #{idx};
	</update>
	
	<update id="setMemberUpdate">
		<if test="vo.pwd != ''">
			UPDATE bo_member SET pwd = #{vo.pwd}, nickname = #{vo.nickname},
			email = #{vo.email}, tel = #{vo.tel}, pwdUpdateDate = default WHERE idx = #{vo.idx};
		</if>
		<if test="vo.pwd == ''">
			UPDATE bo_member SET nickname = #{vo.nickname}, email = #{vo.email}, tel = #{vo.tel} WHERE idx = #{vo.idx};
		</if>
	</update>
	
	<update id="setMemberDelete">
		UPDATE bo_member SET memberDel = "탈퇴", memberDelReason = #{vo.memberDelReason}, lastVisit = default WHERE idx = #{vo.idx};
	</update>
	
	<update id="setAddressDelete">
		UPDATE bo_address SET addressDel = "삭제" WHERE idx = #{idx};
	</update>
	
	<update id="setSubscribeCancel">
		UPDATE bo_subscribe SET subStatus = "구독취소신청" WHERE idx = #{idx};
	</update>
	
	<update id="setOrderAddressIdxChange">
		UPDATE bo_order SET addressIdx = #{vo.addressIdx} WHERE idx = #{vo.idx};
	</update>
	
	<delete id="setSaveIdxesDelete">
		DELETE FROM bo_save WHERE idx IN
    <foreach collection="saveIdxList" item="saveIdxList" open="(" close=")" separator=",">
   		#{saveIdxList}
    </foreach>
	</delete>
	
	<delete id="setSaveDelete">
		DELETE FROM bo_save WHERE idx = #{idx};
	</delete>
	
</mapper>